api.budget do
  api.updated_at @budget.updated_at

  api.project do
    api.id @budget.project.id
    api.start_date @budget.project.custom_start_date
    api.end_date @budget.project.custom_end_date
  end 

  api.worktime do
    api.working_hours_start @budget.working_hours_start
    api.working_hours_end @budget.working_hours_end
    api.working_days @budget.working_days
    api.holidays @budget.project.holidays.map(&:date)
  end

  api.total_stats do
    api.total_income @budget.total_income
    api.total_cost @budget.total_cost
    api.total_profit @budget.total_profit

    api.planned_hours_count @budget.planned_hours_count
    api.total_hours_count @budget.total_hours_count
    api.total_hours_income @budget.total_hours_income
    api.total_hours_cost @budget.total_hours_cost
    api.total_hours_profit @budget.total_hours_profit

    api.total_entries_income @budget.total_entries_income
    api.total_entries_cost @budget.total_entries_cost
    api.total_entries_profit @budget.total_entries_profit
  end

  api.real_stats do
    api.real_income @budget_calculator.real_income
    api.real_cost @budget_calculator.real_cost
    api.real_profit @budget_calculator.real_profit

    api.real_hours_count @budget_calculator.real_hours_count
    api.real_hours_income @budget_calculator.real_hours_income
    api.real_hours_cost @budget_calculator.real_hours_cost
    api.real_hours_profit @budget_calculator.real_hours_profit

    api.real_entries_income @budget_calculator.real_entries_income
    api.real_entries_cost @budget_calculator.real_entries_cost
    api.real_entries_profit @budget_calculator.real_entries_profit
  end

  api.array :real_stats_by_roles do
    @budget_calculator.works_by_role.each do |row|
      api.role do
        api.role id: row[:role].id, name: row[:role].name

        api.planned_hours_count row[:planned_hours_count]
        api.real_hours_count row[:real_hours_count]
        api.real_income row[:real_income]
        api.real_cost row[:real_cost]
        api.real_profit row[:real_profit]
      end
    end
  end

  api.array :real_stats_by_users do
    @budget_calculator.works_by_user.each do |_, row|
      api.user do
        api.user id: row[:user].id, name: row[:user].name

        api.real_hours_count row[:real_hours_count]
        api.real_income row[:real_income]
        api.real_cost row[:real_cost]
        api.real_profit row[:real_profit]
      end
    end
  end

  api.array :real_stats_by_months do
    @budget_calculator.stats_by_month.each.with_index do |(month_date, row), i|
      api.month do
        api.month_date month_date.strftime("%m-%Y") 
        api.income row[:income]
        api.cost row[:cost]
        api.profit row[:profit]
        api.hours_income row[:hours_income]
        api.hours_cost row[:hours_cost]
        api.hours_profit row[:hours_profit]
        api.entries_income row[:entries_income]
        api.entries_cost row[:entries_cost]
        api.entries_profit row[:entries_profit]
      end
    end
  end

  api.array :budget_entries_categories do
    @budget.project.budget_entries_categories.each do |budget_entries_category|
      api.budget_entries_category do
        api.name budget_entries_category.name
        api.entry_type budget_entries_category.entry_type_symbol
        api.planned_amount budget_entries_category.planned_amount
        api.real_amount budget_entries_category.real_amount
      end
    end
  end

  api.array :budget_entries do
    @budget.project.budget_entries.each do |budget_entry|
      api.budget_entry do
        api.name budget_entry.name
        api.planned budget_entry.planned
        api.entry_type budget_entry.entry_type_symbol

        api.category_id budget_entry.category_id
        api.issue_id budget_entry.issue_id
        api.created_on budget_entry.created_on
        api.user id: budget_entry.user.id, name: budget_entry.user.name if budget_entry.user

        api.netto_amount budget_entry.netto_amount
        api.tax budget_entry.tax
        api.brutto_amount budget_entry.brutto_amount
        api.deposit_amount budget_entry.deposit_amount
      end
    end
  end

end
